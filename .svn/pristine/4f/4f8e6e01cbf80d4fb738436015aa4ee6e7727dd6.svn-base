package com.dev.abeneto.charanifact.db;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

import com.dev.abeneto.charanifact.R;
import com.dev.abeneto.charanifact.pojo.LineaFactura;
import com.dev.abeneto.charanifact.pojo.Pacient;
import com.dev.abeneto.charanifact.pojo.Tractament;
import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.TableUtils;

import java.sql.SQLException;

/**
 * Created by Alberto on 14/09/2016.
 */
public class DatabaseHelper extends OrmLiteSqliteOpenHelper {

    private static final String DATABASE_NAME = "facturacio_aabm";
    private static final int DATABASE_VERSION = 1;

    private Dao<Pacient, Long> pacientDao;
    private Dao<Tractament, Long> tractamentDao;
    private Dao<LineaFactura, Long> lineaFacturaDao;

    public DatabaseHelper(Context context) {
        super(context,DATABASE_NAME,null,DATABASE_VERSION,R.raw.ormlite_config);
    }

    @Override
    public void onCreate(SQLiteDatabase database, ConnectionSource connectionSource) {

        try {
            TableUtils.createTable(connectionSource, Pacient.class);
            TableUtils.createTable(connectionSource, Tractament.class);
            TableUtils.createTable(connectionSource, LineaFactura.class);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion) {
        try {
            TableUtils.dropTable(connectionSource, Pacient.class, false);
            TableUtils.dropTable(connectionSource, Tractament.class, false);
            TableUtils.dropTable(connectionSource, LineaFactura.class, false);
            this.onCreate(database,connectionSource);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public Dao<Pacient, Long> getPacientDao() throws SQLException {
        if(pacientDao == null) {
            pacientDao = getDao(Pacient.class);
        }
        return pacientDao;
    }

    public Dao<Tractament, Long> getTractamentDao() throws SQLException {
        if(tractamentDao == null) {
            tractamentDao = getDao(Tractament.class);
        }
        return tractamentDao;
    }

    public Dao<LineaFactura, Long> getLineaFacturaDao() throws SQLException {
        if(lineaFacturaDao == null) {
            lineaFacturaDao = getDao(LineaFactura.class);
        }
        return lineaFacturaDao;
    }


}
